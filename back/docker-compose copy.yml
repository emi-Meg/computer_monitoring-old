services:
  computer-monitoring:
    build:
      context: ./
      dockerfile: Dockerfile
    image: computer-monitoring
    container_name: computer-server
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
      - ./:/var/www
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - computer

  computer-mysql:
    image: mysql:8.0
    container_name: computer-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: computer_monitoring
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: computer-mysql
    ports:
      - "3307:3307"  # Expose MySQL on port 3307
    volumes:
      - computer_data:/var/lib/mysql
    networks:
      - computer
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  computer-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: computer-phpmyadmin
    restart: unless-stopped
    ports:
      - 8081:80  # Expose phpMyAdmin on port 8080
    environment:
      PMA_HOST: computer-mysql  # Use 'mysql' as the service name
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - computer

  computer-nginx:
    image: nginx:alpine
    container_name: computer-nginx
    restart: unless-stopped
    ports:
      - 9002:9002
    volumes:
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www
    networks:
      - computer

volumes:
  computer_data:

networks:
  computer:
    driver: bridge